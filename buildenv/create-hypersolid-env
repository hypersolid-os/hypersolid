#!/usr/bin/env bash

set -e

# basedir
BASEDIR="$( cd "$( dirname "$(realpath ${BASH_SOURCE[0]})" )" && pwd )"
WORKINGDIR="$(pwd)"

# get function utilities
source $BASEDIR/../setup/functions

# build environment path set ?
if [ -z "$1" ]; then
    log_error "build environment path not set"
    exit 1
fi

# assign
BUILD_ENV="$1"

# directory alreay exists ?
[ ! -d "$BUILD_ENV" ] && {
    # create cache dir
    mkdir $BUILD_ENV
} || {
    log_info "build env already exist..skipping"
    exit 0
}

# create apt config dirs
mkdir -p $BUILD_ENV/etc/apt/trusted.gpg.d $BUILD_ENV/etc/apt/apt.conf.d

# copy keyrings
cp -RT $BASEDIR/../rootfs/etc/apt/trusted.gpg.d $BUILD_ENV/etc/apt/trusted.gpg.d

# copy apt proxy config if exist
[ -f "$WORKINGDIR/../apt-proxy.conf" ] && {
    cp $WORKINGDIR/../apt-proxy.conf $BUILD_ENV/etc/apt/apt.conf.d/01-proxy.conf
}

print_subheading "starting multistrap.."

# run multistrap as current user (uid/gid not set properly but not required)
/usr/sbin/multistrap \
    --arch "amd64" \
    --dir $BUILD_ENV \
    --file $BASEDIR/multistrap.ini && {
        log_success "multistrap finished"
    } || {
        log_error "multistrap failed"
        exit 1
    }

# copy configure script
cp $BASEDIR/dpkg-configure $BUILD_ENV/dpkg-configure

# create config path for multistrap operation
mkdir -p $BUILD_ENV/etc/hypersolid

# create assets dir
mkdir -p $BUILD_ENV/usr/share/hypersolid

# copy assets
cp -RT $BASEDIR/../assets $BUILD_ENV/usr/share/hypersolid

print_subheading "configuring packages.."

# configure build environment system
sudo systemd-nspawn \
    --register=false \
    --private-users \
    --directory $BUILD_ENV \
    ./dpkg-configure && {
        log_success "package configuration finished"
    } || {
        log_error "package configuration finished"
        exit 1
    }

